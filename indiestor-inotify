#!/usr/bin/php
<?php

/*
        Indiestor inotify program

	Written by Erik Poupaert, erik@sankuru.biz
        Commissioned at peopleperhour.com 
        By Alex Gardiner, alex.gardiner@canterbury.ac.uk
*/

require_once(dirname(__FILE__).'/lib/inotify/InEvent.php');
require_once(dirname(__FILE__).'/lib/admin/etcfiles/EtcPasswd.php');
require_once(dirname(__FILE__).'/lib/admin/etcfiles/EtcGroup.php');
require_once(dirname(__FILE__).'/lib/admin/action-engine/Incrontab.php');
require_once(dirname(__FILE__).'/lib/inotify/syslog.php');
require_once(dirname(__FILE__).'/lib/inotify/SharingStructure.php');
require_once(dirname(__FILE__).'/lib/inotify/LockingMechanism.php');

syslog_notice_start_running();

//prepare commandline args
$inEvent=new InEvent();

//only handle project folders or Avid MediaFiles folder
if($inEvent->watchType=='MAIN' && 
	!SharingStructure::isProjectFolder($inEvent->fsObject) &&
	$inEvent->fsObject!='Avid MediaFiles'
) terminate("folder concerned '{$inEvent->fsObject}' not a project folder");

//find user for folder
$homeFolder=$inEvent->homeFolder();
$etcPasswd=EtcPasswd::instance();
$user=$etcPasswd->findUserByHomeFolder($homeFolder);
if($user==null) terminate("Cannot find user for home folder '$homeFolder'");
$userName=$user->name;

//find group for user
$etcGroup=EtcGroup::instance();
$group=$etcGroup->findGroupForUserName($userName);
if($group==null) terminate("Cannot find group for user '$userName'");
$groupName=$group->name;

//we know user and group now
syslog_notice("user is: '$userName' group is: '$groupName'");

//retrieve all group members
$members=$etcPasswd->findUsersForEtcGroup($group);

//start resharing
if($inEvent->watchType=='MAIN')
{
	$lockingMechanism=new LockingMechanism($groupName);
	$lockingMechanism->lock();
	do
	{
		SharingStructure::reshare($groupName,$members);
	}
	while($lockingMechanism->mustReRun());
	$lockingMechanism->unlock();
}

//regenerate incrontab for MXF events
if($inEvent->watchType=='MXF' && $inEvent->fsObject=='Avid MediaFiles')
{
	syslog_notice('Regenerating incrontab (MXF)');
	Incrontab::generate();
}

//regenerate incrontab for PROJ events
if($inEvent->watchType=='MAIN' && SharingStructure::isProjectFolder($inEvent->fsObject))
{
	syslog_notice('Regenerating incrontab (MAIN)');
	Incrontab::generate();
}

//notify end run
syslog_notice_end_running();

